'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Tabs = function (_Component) {
    _inherits(Tabs, _Component);

    function Tabs(props) {
        _classCallCheck(this, Tabs);

        var _this = _possibleConstructorReturn(this, (Tabs.__proto__ || Object.getPrototypeOf(Tabs)).call(this, props));

        _this.state = {
            currentTabIndex: _this.props.defaultTab - 1 || 0
        };

        _this.setSelected = _this.setSelected.bind(_this);
        return _this;
    }

    _createClass(Tabs, [{
        key: 'getChildContext',
        value: function getChildContext() {
            return {
                activeClassName: this.props.activeClassName || "is-active",
                currentTabIndex: this.state.currentTabIndex,
                setSelected: this.setSelected
            };
        }
    }, {
        key: 'componentDidMount',
        value: function componentDidMount() {
            this.isValid();
        }
    }, {
        key: 'isValid',
        value: function isValid() {
            if (_react2.default.Children.count(this.props.children) === 2) {
                if (_react2.default.Children.count(this.props.children[0].props.children) === _react2.default.Children.count(this.props.children[1].props.children)) {
                    if (!this.isValidTabNumber(this.props.defaultTab)) {
                        this.setState({ currentTabIndex: 0 });
                    }
                } else {
                    throw new Error("There should be an equal number of <Tab/> and <Panel/> components.");
                }
            } else {
                throw new Error("There should be exactly one of each <TabList/> and <PanelContainer/> component.");
            }
        }
    }, {
        key: 'isValidTabNumber',
        value: function isValidTabNumber(tabNumber) {
            return tabNumber > 0 && tabNumber <= _react2.default.Children.count(this.props.children[0].props.children);
        }
    }, {
        key: 'setSelected',
        value: function setSelected(tabNumber) {
            if (!this.isValidTabNumber(tabNumber)) {
                throw new Error("Tried to selected a non-existing tab.");
            }

            var newTabIndex = tabNumber - 1;
            if (newTabIndex != this.state.currentTabIndex) {
                var abort = false;
                if (typeof this.props.onSelect !== 'undefined') {
                    abort = this.props.onSelect(tabNumber) === false;
                }
                if (!abort) {
                    this.setState({ currentTabIndex: newTabIndex });
                }
            }
        }
    }, {
        key: 'getSelected',
        value: function getSelected() {
            return this.state.currentTabIndex + 1;
        }
    }, {
        key: 'render',
        value: function render() {
            var _props = this.props,
                defaultTab = _props.defaultTab,
                activeClassName = _props.activeClassName,
                props = _objectWithoutProperties(_props, ['defaultTab', 'activeClassName']);

            return _react2.default.createElement(
                'div',
                _extends({ className: (0, _classnames2.default)(props.className) }, props),
                this.props.children
            );
        }
    }]);

    return Tabs;
}(_react.Component);

exports.default = Tabs;


Tabs.childContextTypes = {
    activeClassName: _propTypes2.default.string,
    currentTabIndex: _propTypes2.default.number.isRequired,
    setSelected: _propTypes2.default.func.isRequired
};

Tabs.propTypes = {
    defaultTab: _propTypes2.default.number,
    className: _propTypes2.default.string,
    activeClassName: _propTypes2.default.string,
    children: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.object]),
    onSelect: _propTypes2.default.func
};